<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1 (Python 3.10.5 on win32)" generated="20230714 11:09:40.318" rpa="false" schemaversion="4">
<suite id="s1" name="Chatgpt Test Cases" source="D:\Sauvegarde travaux Cham\Robot_Framework\Robot_Framework_practice\chatgpt\chatgpt_test_cases.robot">
<test id="s1-t1" name="Example Test Case" line="77">
<kw name="Make sure that the API key is filled" library="api_key" type="SETUP">
<tag>api_key</tag>
<tag>filled_data</tag>
<tag>string_variable</tag>
<doc>We make sure that the API key is filled to connect to ChatGPT.</doc>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${var_api_key}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230714 11:09:41.485" level="INFO">Length is 51</msg>
<status status="PASS" starttime="20230714 11:09:41.484" endtime="20230714 11:09:41.485"/>
</kw>
<kw name="Should Be String" library="String">
<arg>${var_api_key}</arg>
<doc>Fails if the given ``item`` is not a string.</doc>
<status status="PASS" starttime="20230714 11:09:41.486" endtime="20230714 11:09:41.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>The API key is filled as a string</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230714 11:09:41.486" level="INFO">The API key is filled as a string</msg>
<status status="PASS" starttime="20230714 11:09:41.486" endtime="20230714 11:09:41.486"/>
</kw>
<status status="PASS" starttime="20230714 11:09:41.484" endtime="20230714 11:09:41.486"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${input_string}</var>
<arg>Hello, World!</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230714 11:09:41.486" level="INFO">${input_string} = Hello, World!</msg>
<status status="PASS" starttime="20230714 11:09:41.486" endtime="20230714 11:09:41.487"/>
</kw>
<kw name="Fetch From Right" library="String">
<var>${left_part}</var>
<arg>${input_string}</arg>
<arg>,</arg>
<doc>Returns contents of the ``string`` after the last occurrence of ``marker``.</doc>
<msg timestamp="20230714 11:09:41.487" level="INFO">${left_part} =  World!</msg>
<status status="PASS" starttime="20230714 11:09:41.487" endtime="20230714 11:09:41.487"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Left part: ${left_part}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230714 11:09:41.491" level="INFO">Left part:  World!</msg>
<status status="PASS" starttime="20230714 11:09:41.488" endtime="20230714 11:09:41.491"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Left part: ${left_part}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230714 11:09:41.492" endtime="20230714 11:09:41.493"/>
</kw>
<tag>fetch</tag>
<status status="PASS" starttime="20230714 11:09:41.483" endtime="20230714 11:09:41.493"/>
</test>
<test id="s1-t2" name="Test Case 1" line="85">
<kw name="Make sure that the API key is filled" library="api_key" type="SETUP">
<tag>api_key</tag>
<tag>filled_data</tag>
<tag>string_variable</tag>
<doc>We make sure that the API key is filled to connect to ChatGPT.</doc>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${var_api_key}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230714 11:09:41.495" level="INFO">Length is 51</msg>
<status status="PASS" starttime="20230714 11:09:41.495" endtime="20230714 11:09:41.495"/>
</kw>
<kw name="Should Be String" library="String">
<arg>${var_api_key}</arg>
<doc>Fails if the given ``item`` is not a string.</doc>
<status status="PASS" starttime="20230714 11:09:41.495" endtime="20230714 11:09:41.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>The API key is filled as a string</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230714 11:09:41.496" level="INFO">The API key is filled as a string</msg>
<status status="PASS" starttime="20230714 11:09:41.495" endtime="20230714 11:09:41.496"/>
</kw>
<status status="PASS" starttime="20230714 11:09:41.494" endtime="20230714 11:09:41.496"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>This is test case 1</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230714 11:09:41.496" endtime="20230714 11:09:41.496"/>
</kw>
<tag>Smoke</tag>
<status status="PASS" starttime="20230714 11:09:41.494" endtime="20230714 11:09:41.496"/>
</test>
<test id="s1-t3" name="Test Case 4" line="97">
<kw name="Make sure that the API key is filled" library="api_key" type="SETUP">
<tag>api_key</tag>
<tag>filled_data</tag>
<tag>string_variable</tag>
<doc>We make sure that the API key is filled to connect to ChatGPT.</doc>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${var_api_key}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230714 11:09:41.498" level="INFO">Length is 51</msg>
<status status="PASS" starttime="20230714 11:09:41.497" endtime="20230714 11:09:41.498"/>
</kw>
<kw name="Should Be String" library="String">
<arg>${var_api_key}</arg>
<doc>Fails if the given ``item`` is not a string.</doc>
<status status="PASS" starttime="20230714 11:09:41.498" endtime="20230714 11:09:41.498"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>The API key is filled as a string</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230714 11:09:41.498" level="INFO">The API key is filled as a string</msg>
<status status="PASS" starttime="20230714 11:09:41.498" endtime="20230714 11:09:41.498"/>
</kw>
<status status="PASS" starttime="20230714 11:09:41.497" endtime="20230714 11:09:41.499"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>This is test case 4</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230714 11:09:41.499" endtime="20230714 11:09:41.499"/>
</kw>
<tag>Smoke</tag>
<status status="PASS" starttime="20230714 11:09:41.497" endtime="20230714 11:09:41.499"/>
</test>
<test id="s1-t4" name="Test Case 5" line="101">
<kw name="Make sure that the API key is filled" library="api_key" type="SETUP">
<tag>api_key</tag>
<tag>filled_data</tag>
<tag>string_variable</tag>
<doc>We make sure that the API key is filled to connect to ChatGPT.</doc>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${var_api_key}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230714 11:09:41.501" level="INFO">Length is 51</msg>
<status status="PASS" starttime="20230714 11:09:41.500" endtime="20230714 11:09:41.501"/>
</kw>
<kw name="Should Be String" library="String">
<arg>${var_api_key}</arg>
<doc>Fails if the given ``item`` is not a string.</doc>
<status status="PASS" starttime="20230714 11:09:41.501" endtime="20230714 11:09:41.501"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>The API key is filled as a string</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230714 11:09:41.501" level="INFO">The API key is filled as a string</msg>
<status status="PASS" starttime="20230714 11:09:41.501" endtime="20230714 11:09:41.501"/>
</kw>
<status status="PASS" starttime="20230714 11:09:41.500" endtime="20230714 11:09:41.501"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>This is test case 5</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230714 11:09:41.502" endtime="20230714 11:09:41.502"/>
</kw>
<tag>Sanity</tag>
<status status="PASS" starttime="20230714 11:09:41.500" endtime="20230714 11:09:41.502"/>
</test>
<doc>To execute a test case using a tag, write this command in the terminal :robot -d results -i Smoke Tests/Tags.robot
For further information: https://testersdock.com/robot-framework-tags/</doc>
<status status="PASS" starttime="20230714 11:09:40.332" endtime="20230714 11:09:41.503"/>
</suite>
<statistics>
<total>
<stat pass="4" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">fetch</stat>
<stat pass="1" fail="0" skip="0">Sanity</stat>
<stat pass="2" fail="0" skip="0">Smoke</stat>
</tag>
<suite>
<stat pass="4" fail="0" skip="0" id="s1" name="Chatgpt Test Cases">Chatgpt Test Cases</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
